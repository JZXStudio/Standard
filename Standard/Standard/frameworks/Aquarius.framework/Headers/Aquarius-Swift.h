#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef AQUARIUS_SWIFT_H
#define AQUARIUS_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import UserNotifications;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Aquarius",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC8Aquarius4AApp")
@interface AApp : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSString;

SWIFT_CLASS("_TtC8Aquarius5ABind")
@interface ABind : NSObject
- (void)observeValueForKeyPath:(NSString * _Nullable)keyPath ofObject:(id _Nullable)object change:(NSDictionary<NSKeyValueChangeKey, id> * _Nullable)change context:(void * _Nullable)context;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius9ACalendar")
@interface ACalendar : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius14ACalendarEvent")
@interface ACalendarEvent : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSCoder;

SWIFT_CLASS("_TtC8Aquarius19ACollectionViewCell")
@interface ACollectionViewCell : UICollectionViewCell
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius6AColor")
@interface AColor : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius7ACommon")
@interface ACommon : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius8AConvert")
@interface AConvert : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol DesignColorProtocol;

/// 自定义设计的接口
/// 接口通过UIDesign来实现
SWIFT_PROTOCOL("_TtP8Aquarius7ADesign_")
@protocol ADesign
@optional
/// 自定义的颜色
@property (nonatomic, strong) id <DesignColorProtocol> _Nonnull colorDesign;
@end


SWIFT_CLASS("_TtC8Aquarius5AFile")
@interface AFile : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius5AFont")
@interface AFont : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius4AGCD")
@interface AGCD : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius6AImage")
@interface AImage : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius6ALabel")
@interface ALabel : UILabel
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (CGRect)textRectForBounds:(CGRect)bounds limitedToNumberOfLines:(NSInteger)numberOfLines SWIFT_WARN_UNUSED_RESULT;
- (void)drawRect:(CGRect)rect;
@end


SWIFT_PROTOCOL("_TtP8Aquarius14LayoutProtocol_")
@protocol LayoutProtocol
@optional
@property (nonatomic) CGFloat x;
@property (nonatomic) CGFloat y;
@property (nonatomic) CGFloat width;
@property (nonatomic) CGFloat height;
@property (nonatomic) CGPoint point;
@property (nonatomic) CGSize size;
@property (nonatomic) CGRect frame;
@end


SWIFT_CLASS("_TtC8Aquarius7ALayout") SWIFT_DEPRECATED_MSG("此方法已弃用")
@interface ALayout : NSObject <LayoutProtocol>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius7ALogger")
@interface ALogger : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius6AMacro")
@interface AMacro : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius9AViewBase")
@interface AViewBase : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius6AModel")
@interface AModel : AViewBase
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIViewController;
@class NSBundle;

SWIFT_CLASS("_TtC8Aquarius21ANavigationController")
@interface ANavigationController : UINavigationController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=5.0);
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSNotification;

SWIFT_CLASS("_TtC8Aquarius13ANotification")
@interface ANotification : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)receiveNotificationWithNotification:(NSNotification * _Nonnull)notification;
@end


SWIFT_CLASS("_TtC8Aquarius14AReminderEvent")
@interface AReminderEvent : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UITab;

SWIFT_CLASS("_TtC8Aquarius17ATabBarController")
@interface ATabBarController : UITabBarController
- (void)viewDidLoad;
- (nonnull instancetype)initWithTabs:(NSArray<UITab *> * _Nonnull)tabs OBJC_DESIGNATED_INITIALIZER SWIFT_AVAILABILITY(ios,introduced=18.0);
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius10ATableView")
@interface ATableView : UITableView
- (nonnull instancetype)initWithFrame:(CGRect)frame style:(UITableViewStyle)style OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSIndexPath;
@class UITableViewCell;
@class UIView;

@interface ATableView (SWIFT_EXTENSION(Aquarius)) <UITableViewDataSource, UITableViewDelegate>
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)tableView:(UITableView * _Nonnull)tableView numberOfRowsInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCell * _Nonnull)tableView:(UITableView * _Nonnull)tableView cellForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView didSelectRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (void)tableView:(UITableView * _Nonnull)tableView willDisplayCell:(UITableViewCell * _Nonnull)cell forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (NSInteger)numberOfSectionsInTableView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForFooterInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UITableViewCellEditingStyle)tableView:(UITableView * _Nonnull)tableView editingStyleForRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath SWIFT_WARN_UNUSED_RESULT;
- (void)tableView:(UITableView * _Nonnull)tableView commitEditingStyle:(UITableViewCellEditingStyle)editingStyle forRowAtIndexPath:(NSIndexPath * _Nonnull)indexPath;
- (CGFloat)tableView:(UITableView * _Nonnull)tableView heightForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nullable)tableView:(UITableView * _Nonnull)tableView viewForHeaderInSection:(NSInteger)section SWIFT_WARN_UNUSED_RESULT;
@end


/// tableViewCell的基类
/// 主要包括：
/// <ul>
///   <li>
///     分层管理
///   </li>
///   <li>
///     热更新管理
///   </li>
/// </ul>
SWIFT_CLASS("_TtC8Aquarius14ATableViewCell")
@interface ATableViewCell : UITableViewCell
- (nonnull instancetype)initWithStyle:(UITableViewCellStyle)style reuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// 热更新时调用的代码在此方法中实现
/// <em>此方法依赖InjectIII工具</em>
- (void)injected;
@end



SWIFT_CLASS("_TtC8Aquarius26ATableViewHeaderFooterView")
@interface ATableViewHeaderFooterView : UITableViewHeaderFooterView
- (nonnull instancetype)initWithReuseIdentifier:(NSString * _Nullable)reuseIdentifier OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class UIFont;
@class NSAttributedString;
@class NSTextContainer;
@protocol DesignStyleProtocol;

SWIFT_CLASS("_TtC8Aquarius9ATextView")
@interface ATextView : UITextView
@property (nonatomic, strong) UIFont * _Nullable font;
@property (nonatomic, copy) NSString * _Null_unspecified text;
@property (nonatomic, strong) NSAttributedString * _Null_unspecified attributedText;
- (nonnull instancetype)initWithFrame:(CGRect)frame textContainer:(NSTextContainer * _Nullable)textContainer SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)drawRect:(CGRect)rect;
- (void)layoutSubviews;
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end


SWIFT_CLASS("_TtC8Aquarius6ATheme")
@interface ATheme : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius11AThemeStyle")
@interface AThemeStyle : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UIColor;

SWIFT_PROTOCOL("_TtP8Aquarius23AThemeStyleBaseProtocol_")
@protocol AThemeStyleBaseProtocol
@optional
@property (nonatomic, copy) NSDictionary<NSString *, UIColor *> * _Nullable color;
@end

@protocol AThemeStyle_UIViewProtocol;
@protocol AThemeStyle_CATextLayerProtocol;
@protocol AThemeStyle_CALayerProtocol;
@protocol AThemeStyle_UILabelProtocol;
@protocol AThemeStyle_UITextFieldProtocol;
@protocol AThemeStyle_UITextViewProtocol;
@protocol AThemeStyle_UIButtonProtocol;
@protocol AThemeStyle_UIBarButtonItemProtocol;
@protocol AThemeStyle_UIImageViewProtocol;
@protocol AThemeStyle_UINavigationBarProtocol;
@protocol AThemeStyle_UISearchBarProtocol;
@protocol AThemeStyle_UITabBarProtocol;
@protocol AThemeStyle_UISwitchProtocol;
@protocol AThemeStyle_UIPageControlProtocol;
@protocol AThemeStyle_UIProgressViewProtocol;
@protocol AThemeStyle_UISliderProtocol;
@protocol AThemeStyle_UITableViewProtocol;
@protocol AThemeStyle_UITableViewCellProtocol;
@protocol AThemeStyle_UICollectionViewProtocol;
@protocol AThemeStyle_UICollectionViewCellProtocol;
@protocol AThemeStyle_UIScrollViewProtocol;
@protocol AThemeStyle_WKWebViewProtocol;
@protocol AThemeStyle_UIActivityIndicatorViewProtocol;

SWIFT_PROTOCOL("_TtP8Aquarius19AThemeStyleProtocol_")
@protocol AThemeStyleProtocol
@property (nonatomic, copy) NSString * _Nonnull themeStyleName;
@optional
@property (nonatomic, strong) id <AThemeStyle_UIViewProtocol> _Nullable view;
@property (nonatomic, strong) id <AThemeStyle_CATextLayerProtocol> _Nullable textLayer;
@property (nonatomic, strong) id <AThemeStyle_CALayerProtocol> _Nullable layer;
@property (nonatomic, strong) id <AThemeStyle_UILabelProtocol> _Nullable label;
@property (nonatomic, strong) id <AThemeStyle_UITextFieldProtocol> _Nullable textField;
@property (nonatomic, strong) id <AThemeStyle_UITextViewProtocol> _Nullable textView;
@property (nonatomic, strong) id <AThemeStyle_UIButtonProtocol> _Nullable button;
@property (nonatomic, strong) id <AThemeStyle_UIBarButtonItemProtocol> _Nullable barButtonItem;
@property (nonatomic, strong) id <AThemeStyle_UIImageViewProtocol> _Nullable imageView;
@property (nonatomic, strong) id <AThemeStyle_UINavigationBarProtocol> _Nullable navigationBar;
@property (nonatomic, strong) id <AThemeStyle_UISearchBarProtocol> _Nullable searchBar;
@property (nonatomic, strong) id <AThemeStyle_UITabBarProtocol> _Nullable tabBar;
@property (nonatomic, strong) id <AThemeStyle_UISwitchProtocol> _Nullable _switch;
@property (nonatomic, strong) id <AThemeStyle_UIPageControlProtocol> _Nullable pageControl;
@property (nonatomic, strong) id <AThemeStyle_UIProgressViewProtocol> _Nullable progressView;
@property (nonatomic, strong) id <AThemeStyle_UISliderProtocol> _Nullable slider;
@property (nonatomic, strong) id <AThemeStyle_UITableViewProtocol> _Nullable tableView;
@property (nonatomic, strong) id <AThemeStyle_UITableViewCellProtocol> _Nullable tableViewCell;
@property (nonatomic, strong) id <AThemeStyle_UICollectionViewProtocol> _Nullable collectionView;
@property (nonatomic, strong) id <AThemeStyle_UICollectionViewCellProtocol> _Nullable collectionViewCell;
@property (nonatomic, strong) id <AThemeStyle_UIScrollViewProtocol> _Nullable scrollView;
@property (nonatomic, strong) id <AThemeStyle_WKWebViewProtocol> _Nullable webView;
@property (nonatomic, strong) id <AThemeStyle_UIActivityIndicatorViewProtocol> _Nullable activityIndicatorView;
@property (nonatomic, strong) id <AThemeStyleBaseProtocol> _Nullable custom;
@end


SWIFT_PROTOCOL("_TtP8Aquarius27AThemeStyle_CALayerProtocol_")
@protocol AThemeStyle_CALayerProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable shadowColor;
@property (nonatomic, strong) UIColor * _Nullable borderColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius31AThemeStyle_CATextLayerProtocol_")
@protocol AThemeStyle_CATextLayerProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable foregroundColor;
@property (nonatomic) CFTypeRef _Nullable font;
@end


SWIFT_PROTOCOL("_TtP8Aquarius43AThemeStyle_UIActivityIndicatorViewProtocol_")
@protocol AThemeStyle_UIActivityIndicatorViewProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable color;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius35AThemeStyle_UIBarButtonItemProtocol_")
@protocol AThemeStyle_UIBarButtonItemProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius28AThemeStyle_UIButtonProtocol_")
@protocol AThemeStyle_UIButtonProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, id> *> * _Nullable titleColor;
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, id> *> * _Nullable titleShadowColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, id> *> * _Nullable image;
@property (nonatomic, copy) NSArray<NSDictionary<NSString *, id> *> * _Nullable backgroundImage;
@end


SWIFT_PROTOCOL("_TtP8Aquarius40AThemeStyle_UICollectionViewCellProtocol_")
@protocol AThemeStyle_UICollectionViewCellProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius36AThemeStyle_UICollectionViewProtocol_")
@protocol AThemeStyle_UICollectionViewProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@end

@class UIImage;

SWIFT_PROTOCOL("_TtP8Aquarius31AThemeStyle_UIImageViewProtocol_")
@protocol AThemeStyle_UIImageViewProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIImage * _Nullable image;
@property (nonatomic, strong) UIImage * _Nullable highlightedImage;
@end


SWIFT_PROTOCOL("_TtP8Aquarius27AThemeStyle_UILabelProtocol_")
@protocol AThemeStyle_UILabelProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic, strong) UIColor * _Nullable highlightedTextColor;
@property (nonatomic, strong) UIColor * _Nullable shadowColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIFont * _Nullable font;
@end


SWIFT_PROTOCOL("_TtP8Aquarius35AThemeStyle_UINavigationBarProtocol_")
@protocol AThemeStyle_UINavigationBarProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIColor * _Nullable barTintColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius33AThemeStyle_UIPageControlProtocol_")
@protocol AThemeStyle_UIPageControlProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable pageIndicatorTintColor;
@property (nonatomic, strong) UIColor * _Nullable currentPageIndicatorTintColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIImage * _Nullable preferredIndicatorImage;
@end


SWIFT_PROTOCOL("_TtP8Aquarius34AThemeStyle_UIProgressViewProtocol_")
@protocol AThemeStyle_UIProgressViewProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable progressTintColor;
@property (nonatomic, strong) UIColor * _Nullable trackTintColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIImage * _Nullable progressImage;
@property (nonatomic, strong) UIImage * _Nullable trackImage;
@end


SWIFT_PROTOCOL("_TtP8Aquarius32AThemeStyle_UIScrollViewProtocol_")
@protocol AThemeStyle_UIScrollViewProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius31AThemeStyle_UISearchBarProtocol_")
@protocol AThemeStyle_UISearchBarProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIColor * _Nullable barTintColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius28AThemeStyle_UISliderProtocol_")
@protocol AThemeStyle_UISliderProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable minimumTrackTintColor;
@property (nonatomic, strong) UIColor * _Nullable maximumTrackTintColor;
@property (nonatomic, strong) UIColor * _Nullable thumbTintColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIImage * _Nullable minimumValueImage;
@property (nonatomic, strong) UIImage * _Nullable maximumValueImage;
@end


SWIFT_PROTOCOL("_TtP8Aquarius28AThemeStyle_UISwitchProtocol_")
@protocol AThemeStyle_UISwitchProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable onTintColor;
@property (nonatomic, strong) UIColor * _Nullable thumbTintColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIImage * _Nullable onImage;
@property (nonatomic, strong) UIImage * _Nullable offImage;
@end


SWIFT_PROTOCOL("_TtP8Aquarius28AThemeStyle_UITabBarProtocol_")
@protocol AThemeStyle_UITabBarProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIColor * _Nullable barTintColor;
@property (nonatomic, strong) UIColor * _Nullable selectedImageTintColor;
@property (nonatomic, strong) UIColor * _Nullable unselectedItemTintColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIImage * _Nullable selectionIndicatorImage;
@property (nonatomic, strong) UIImage * _Nullable backgroundImage;
@property (nonatomic, strong) UIImage * _Nullable shadowImage;
@end


SWIFT_PROTOCOL("_TtP8Aquarius35AThemeStyle_UITableViewCellProtocol_")
@protocol AThemeStyle_UITableViewCellProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius31AThemeStyle_UITableViewProtocol_")
@protocol AThemeStyle_UITableViewProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable separatorColor;
@property (nonatomic, strong) UIColor * _Nullable sectionIndexColor;
@property (nonatomic, strong) UIColor * _Nullable sectionIndexBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable sectionIndexTrackingBackgroundColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius31AThemeStyle_UITextFieldProtocol_")
@protocol AThemeStyle_UITextFieldProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIImage * _Nullable background;
@property (nonatomic, strong) UIImage * _Nullable disabledBackground;
@property (nonatomic, strong) UIFont * _Nullable font;
@end


SWIFT_PROTOCOL("_TtP8Aquarius30AThemeStyle_UITextViewProtocol_")
@protocol AThemeStyle_UITextViewProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable textColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@property (nonatomic, strong) UIFont * _Nullable font;
@end


SWIFT_PROTOCOL("_TtP8Aquarius26AThemeStyle_UIViewProtocol_")
@protocol AThemeStyle_UIViewProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@end


SWIFT_PROTOCOL("_TtP8Aquarius29AThemeStyle_WKWebViewProtocol_")
@protocol AThemeStyle_WKWebViewProtocol <AThemeStyleBaseProtocol>
@optional
@property (nonatomic, strong) UIColor * _Nullable themeColor;
@property (nonatomic, strong) UIColor * _Nullable backgroundColor;
@property (nonatomic, strong) UIColor * _Nullable tintColor;
@end


SWIFT_CLASS("_TtC8Aquarius3AUI")
@interface AUI : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC8Aquarius17AUserNotification")
@interface AUserNotification : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class UNUserNotificationCenter;
@class UNNotificationResponse;

@interface AUserNotification (SWIFT_EXTENSION(Aquarius)) <UNUserNotificationCenterDelegate>
- (void)userNotificationCenter:(UNUserNotificationCenter * _Nonnull)center didReceiveNotificationResponse:(UNNotificationResponse * _Nonnull)response withCompletionHandler:(void (^ _Nonnull)(void))completionHandler;
@end

@class UIControl;
@class UITraitCollection;
@class UITouch;
@class UIEvent;

/// view的基类（MVVM）
/// 主要包括：
/// <ul>
///   <li>
///     键盘管理
///   </li>
///   <li>
///     分层管理
///   </li>
///   <li>
///     事件管理
///   </li>
///   <li>
///     Delegate管理
///   </li>
///   <li>
///     通知管理
///   </li>
///   <li>
///     数据绑定管理
///   </li>
///   <li>
///     日志管理
///   </li>
///   <li>
///     热更新管理
///   </li>
/// </ul>
SWIFT_CLASS("_TtC8Aquarius5AView")
@interface AView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
/// 使用Event时的统一回调方法
/// \param sender 事件的UI控件
///
- (void)manageAllEventsWithSender:(UIControl * _Nonnull)sender;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
/// 热更新时调用的代码在此方法中实现
/// <em>此方法依赖InjectIII工具</em>
- (void)injected;
@end



SWIFT_CLASS("_TtC8Aquarius11AViewConfig")
@interface AViewConfig : AViewBase
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// viewController的基类（MVVM）
/// 主要包括：
/// <ul>
///   <li>
///     埋点
///   </li>
///   <li>
///     导航条管理
///   </li>
///   <li>
///     分层管理
///   </li>
///   <li>
///     主题管理
///   </li>
///   <li>
///     日志管理
///   </li>
///   <li>
///     热更新管理
///   </li>
/// </ul>
SWIFT_CLASS("_TtC8Aquarius15AViewController")
@interface AViewController : UIViewController
/// 导航条-标题
/// 示例：
/// \code
/// open override func a_Navigation() -> Void {
///     super.a_Navigation()
///
///     self.navigation_Title = "标题"
/// }
///
/// \endcode
@property (nonatomic, copy) NSString * _Nonnull navigation_Title;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)viewDidLoad;
/// 热更新时调用的代码在此方法中实现
/// <em>此方法依赖InjectIII工具</em>
- (void)injected;
@end


/// viewModel的基类（MVVM）
/// 主要包括：
/// <ul>
///   <li>
///     分层管理
///   </li>
///   <li>
///     Delegate管理
///   </li>
///   <li>
///     通知管理
///   </li>
///   <li>
///     数据绑定管理
///   </li>
///   <li>
///     日志管理
///   </li>
///   <li>
///     热更新管理
///   </li>
/// </ul>
SWIFT_CLASS("_TtC8Aquarius10AViewModel")
@interface AViewModel : AViewBase
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// 热更新时调用的代码在此方法中实现
/// <em>此方法依赖InjectIII工具</em>
- (void)injected;
@end




/// 自定义颜色的接口
/// \code
/// import UIKit
/// import Foundation
///
/// import Aquarius
///
/// class ColorDesign: DesignColorProtocol {
///     //背景颜色
///     var bgColor: UIColor {
///        get {
///             AThemeStyle.getThemeColor([
///                .Light : 0xF5F5F5.a_color,
///                 .Dark : 0x151F2E.a_color
///             ])
///        }
///     }
/// }
///
/// \endcode
SWIFT_PROTOCOL("_TtP8Aquarius19DesignColorProtocol_")
@protocol DesignColorProtocol
@optional
/// 背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull bgColor;
/// 导航条背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull navigationBGColor;
/// 导航条标题颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull navigationTitleColor;
/// UITabBar背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull tabBarBGColor;
/// UITableViewCell的背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull cellBGColor;
/// UITableViewCell中选中的颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull cellSelectedColor;
/// UITableViewCell中name文字的颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull cellNameColor;
/// UITableViewCell中detail文字的颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull cellDetailColor;
/// UITableViewCell中border的颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull cellBorderColor;
/// UITableViewCell右侧箭头view颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull cellAccessoryViewColor;
/// UICollectionViewCell背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull collectionViewCellBGColor;
/// UICollectionViewCell中选中的颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull collectionViewCellSelectedColor;
/// UICollectionViewCell中name文字的颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull collectionViewCellNameColor;
/// UICollectionViewCell中detail文字的颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull collectionViewCellDetailColor;
/// UICollectionViewCell中border的颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull collectionViewCellBorderColor;
/// UISearchBar背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchBGColor;
/// UISearchBar placeholder颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchPlaceholderColor;
/// UISearchBar文本颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchTextColor;
/// UISearchBar边框颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull searchBorderColor;
/// 标签默认背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull tagDefaultBGColor;
/// 标签选中时背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull tagSelectedBGColor;
/// 标签默认文本颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull tagTextColor;
/// 标签选中文本颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull tagSelectedTextColor;
/// button1背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button1BGColor;
/// button1文本颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button1TextColor;
/// button1边框颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button1BorderColor;
/// button2背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button2BGColor;
/// button2文本颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button2TextColor;
/// button2边框颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button2BorderColor;
/// button3背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button3BGColor;
/// button3文本颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button3TextColor;
/// button3边框颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button3BorderColor;
/// button4背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button4BGColor;
/// button4文本颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button4TextColor;
/// button4边框颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button4BorderColor;
/// button5背景颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button5BGColor;
/// button5文本颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button5TextColor;
/// button5边框颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull button5BorderColor;
/// 主颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull primaryColor;
/// 辅助1颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull auxiliary1Color;
/// 辅助2颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull auxiliary2Color;
/// 辅助3颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull auxiliary3Color;
/// 辅助4颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull auxiliary4Color;
/// 辅助5颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull auxiliary5Color;
/// 文字主颜色（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull textPrimaryColor;
/// 文字辅助色1（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull textAuxiliary1Color;
/// 文字辅助色2（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull textAuxiliary2Color;
/// 文字辅助色3（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull textAuxiliary3Color;
/// 文字辅助色4（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull textAuxiliary4Color;
/// 文字辅助色5（可选）
@property (nonatomic, readonly, strong) UIColor * _Nonnull textAuxiliary5Color;
/// 过渡色1（可选）
@property (nonatomic, readonly, copy) NSArray<UIColor *> * _Nonnull gradient1Color;
/// 过渡色2（可选）
@property (nonatomic, readonly, copy) NSArray<UIColor *> * _Nonnull gradient2Color;
/// 过渡色3（可选）
@property (nonatomic, readonly, copy) NSArray<UIColor *> * _Nonnull gradient3Color;
/// 过渡色4（可选）
@property (nonatomic, readonly, copy) NSArray<UIColor *> * _Nonnull gradient4Color;
/// 过渡色5（可选）
@property (nonatomic, readonly, copy) NSArray<UIColor *> * _Nonnull gradient5Color;
@end


/// 自定义控件属性接口
/// 此接口用于为单独的组件设置属性
/// 例如：此代码实例中为tableView设置通用的属性。
/// 设置的属性包括：
/// <ul>
///   <li>
///     separatorStyle
///   </li>
///   <li>
///     separatorInset
///   </li>
///   <li>
///     sectionHeaderHeight
///   </li>
///   <li>
///     sectionFooterHeight
///   </li>
/// </ul>
/// \code
/// import UIKit
/// import Foundation
///
/// import Aquarius
///
/// class Common_TableViewStyle: DesignStyleProtocol {
///     var separatorStyle: Any = UITableViewCell.SeparatorStyle.none
///     var separatorInset: Any = UIEdgeInsets.zero
///     var sectionHeaderHeight: Any = 1.0
///     var sectionFooterHeight: Any = 8.0
///
///    public static let shared = Common_TableViewStyle()
/// }
///
/// \endcode使用时，调用组件的styleDesign方法
/// 例如：
/// \code
/// let tableView: UITableView = A.ui.tableView
/// tableView.styleDesign(Common_TableViewStyle.shared)
///
/// \endcode
SWIFT_PROTOCOL("_TtP8Aquarius19DesignStyleProtocol_")
@protocol DesignStyleProtocol
@optional
/// 圆角（可选）
@property (nonatomic) id _Nonnull radius;
/// 边框线宽度（可选）
@property (nonatomic) id _Nonnull borderWidth;
/// 边框线颜色（可选）
@property (nonatomic) id _Nonnull borderColor;
/// tint颜色（可选）
@property (nonatomic) id _Nonnull tintColor;
/// 阴影（可选）
@property (nonatomic) id _Nonnull shadow;
/// 字体（可选）
@property (nonatomic) id _Nonnull font;
/// 文本（可选）
@property (nonatomic) id _Nonnull text;
/// 文本颜色（可选）
@property (nonatomic) id _Nonnull textColor;
/// 文本对齐（可选）
@property (nonatomic) id _Nonnull textAlignment;
/// 粗体（可选）
@property (nonatomic) id _Nonnull bold;
/// 斜体（可选）
@property (nonatomic) id _Nonnull italic;
/// 下划线（可选）
@property (nonatomic) id _Nonnull underline;
/// 删除线（可选）
@property (nonatomic) id _Nonnull deleteline;
/// 默认显示文字（可选）
@property (nonatomic) id _Nonnull placeholder;
/// 默认显示文字颜色（可选）
@property (nonatomic) id _Nonnull placeholderColor;
/// 是否滚动（可选）
@property (nonatomic) id _Nonnull isScrollEnabled;
/// 边框线类型（可选）
@property (nonatomic) id _Nonnull separatorStyle;
/// 边框线布局（可选）
@property (nonatomic) id _Nonnull separatorInset;
/// 背景颜色（可选）
@property (nonatomic) id _Nonnull backgroundColor;
/// 遮罩（可选）
@property (nonatomic) id _Nonnull maskToBounds;
/// tableView的section的头部高度（可选）
@property (nonatomic) id _Nonnull sectionHeaderHeight;
/// tableView的section的尾部高度（可选）
@property (nonatomic) id _Nonnull sectionFooterHeight;
/// barTint颜色（可选）
@property (nonatomic) id _Nonnull barTintColor;
/// 背景图片（可选）
@property (nonatomic) id _Nonnull backgroundImage;
/// 普通的图片（可选）
@property (nonatomic) id _Nonnull normalImage;
/// 高亮的图片（可选）
@property (nonatomic) id _Nonnull highlightedImage;
/// 内容纵向对齐（可选）
@property (nonatomic) id _Nonnull contentVerticalAlignment;
/// 内容横向对齐（可选）
@property (nonatomic) id _Nonnull contentHorizontalAlignment;
/// 图片内部间距（可选）
@property (nonatomic) id _Nonnull imageEdgeInsets;
/// 普通文本（可选）
@property (nonatomic) id _Nonnull normalTitle;
/// 高亮文本（可选）
@property (nonatomic) id _Nonnull highlightedTitle;
/// 普通文本颜色（可选）
@property (nonatomic) id _Nonnull normalTitleColor;
/// 高亮文本颜色（可选）
@property (nonatomic) id _Nonnull highlightedTitleColor;
/// 视图周围的颜色（可选）
@property (nonatomic) id _Nonnull layoutMargins;
/// 过渡颜色（可选）
@property (nonatomic) id _Nonnull gradientColor;
/// 文本字体（可选）
@property (nonatomic) id _Nonnull titleFont;
/// 图片（可选）
@property (nonatomic) id _Nonnull image;
/// 箭头类型（可选）
@property (nonatomic) id _Nonnull accessoryType;
/// 是否隐藏（可选）
@property (nonatomic) id _Nonnull isHidden;
/// 图片和文本的间距（可选）
@property (nonatomic) id _Nonnull imageAndTitlePadding;
/// Label字体（可选）
@property (nonatomic) id _Nonnull textLabelFont;
/// Label颜色（可选）
@property (nonatomic) id _Nonnull textLabelColor;
/// Label文本（可选）
@property (nonatomic) id _Nonnull textLabelText;
/// 详细Label字体（可选）
@property (nonatomic) id _Nonnull detailTextLabelFont;
/// 详细Label颜色（可选）
@property (nonatomic) id _Nonnull detailTextLabelColor;
/// 详细Label文本（可选）
@property (nonatomic) id _Nonnull detailTextLabelText;
/// 设置开关（可选）
@property (nonatomic) id _Nonnull setOn;
/// 设置动画开关（可选）
@property (nonatomic) id _Nonnull setAnimatedOn;
/// 开关的颜色（可选）
@property (nonatomic) id _Nonnull onTintColor;
/// 滑块的背景颜色（可选）
@property (nonatomic) id _Nonnull thumbTintColor;
/// 是否可点击（可选）
@property (nonatomic) id _Nonnull isEnabled;
@end


SWIFT_PROTOCOL("_TtP8Aquarius13EmptyDelegate_")
@protocol EmptyDelegate
@optional
- (UIImage * _Nonnull)emptyImage:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (NSAttributedString * _Nonnull)emptyTitle:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)emptyCustomView:(UITableView * _Nonnull)tableView SWIFT_WARN_UNUSED_RESULT;
- (void)emptyDidTap:(UITableView * _Nonnull)tableView;
@end











@interface UIButton (SWIFT_EXTENSION(Aquarius))
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end



@interface UIControl (SWIFT_EXTENSION(Aquarius))
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end


/// 通过此类实现颜色和组件样式的统一管理
/// 需实现：
/// <ul>
///   <li>
///     DesignColorProtocol（管理颜色）
///   </li>
///   <li>
///     DesignStyleProtocol（管理组件样式）
///   </li>
/// </ul>
/// <em>BaseDesign.swift</em>
/// \code
/// import Foundation
///
/// import Aquarius
///
/// open class BaseDesign: UIDesign {
///     public let colorDesign: DesignColorProtocol = ColorDesign.shared
///
///     public let tableViewStyle: DesignStyleProtocol = Common_TableViewStyle.shared
/// }
///
/// \endcode<em>ColorDesign.swift</em>
/// \code
/// import UIKit
/// import Foundation
///
/// import Aquarius
///
/// class ColorDesign: DesignColorProtocol {
///     //背景颜色
///     var bgColor: UIColor {
///         get {
///             AThemeStyle.getThemeColor([
///                .Light : 0xF5F5F5.a_color,
///                .Dark : 0x151F2E.a_color
///             ])
///         }
///     }
/// }
///
/// \endcode<em>StyleDesign.swift</em>
/// \code
/// import UIKit
/// import Foundation
///
/// import Aquarius
///
/// class Common_TableViewStyle: DesignStyleProtocol {
///     var separatorStyle: Any = UITableViewCell.SeparatorStyle.none
///     var separatorInset: Any = UIEdgeInsets.zero
///     var sectionHeaderHeight: Any = 1.0
///     var sectionFooterHeight: Any = 8.0
///
///     public static let shared = Common_TableViewStyle()
/// }
///
/// \endcode实际使用代码：
/// \code
/// let design: BaseDesign = BaseDesign()
/// let tableView: UITableView = A.ui.tableView
/// tableView
///     .backgroundColor(design.colorDesign.bgColor)
///     .styleDesign(design.styleDesign.tableViewStyle)
///
/// \endcode
SWIFT_CLASS("_TtC8Aquarius8UIDesign")
@interface UIDesign : NSObject <ADesign>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end







@interface UIImageView (SWIFT_EXTENSION(Aquarius))
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end



@interface UILabel (SWIFT_EXTENSION(Aquarius))
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end





@interface UISearchBar (SWIFT_EXTENSION(Aquarius))
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end


@interface UISwitch (SWIFT_EXTENSION(Aquarius))
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end


@interface UITableView (SWIFT_EXTENSION(Aquarius))
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end


@interface UITableViewCell (SWIFT_EXTENSION(Aquarius))
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end


@interface UITextField (SWIFT_EXTENSION(Aquarius))
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end




@interface UIView (SWIFT_EXTENSION(Aquarius))
- (void)frameWithFrame:(CGRect)frame animate:(BOOL)animate duration:(NSTimeInterval)duration;
- (void)frameWithFrames:(NSArray<NSNumber *> * _Nonnull)frames animate:(BOOL)animate duration:(NSTimeInterval)duration;
- (void)frameWithXy:(CGFloat)xy widthHeight:(CGFloat)widthHeight animate:(BOOL)animate duration:(NSTimeInterval)duration;
- (void)frameWithX:(CGFloat)x y:(CGFloat)y w:(CGFloat)w h:(CGFloat)h animate:(BOOL)animate duration:(NSTimeInterval)duration;
- (void)styleDesign:(id <DesignStyleProtocol> _Nonnull)design;
@end




#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
